# -*- coding: utf-8 -*-
"""Industrial.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v3M15xg1CtDW2Sr6acyO_R3wgMAJtMgW
"""

#Steps

#Loading the data
#Descriptive Statistics
#Data Cleaning
#Data Analysis and Transformation
#Load and Merge all the csv data file provided to you and create dataframe

import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

import os
!pip install pydrive

path_dir ='/content/drive/MyDrive/Colab Notebooks/DataSets'
for files in os.listdir(path_dir):
  print(files)

FinalDf=pd.DataFrame()

for files in os.listdir(path_dir):
    DataFrame = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/DataSets/' + files, encoding='ISO-8859-1')
    FinalDf = pd.concat([FinalDf, DataFrame])

FinalDf

FinalDf.head()

FinalDf.tail()

FinalDf.describe()

FinalDf.dtypes

FinalDf.shape

FinalDf.size

FinalDf.sample(n=500)

FinalDf.isnull().sum()

FinalDf.duplicated().sum()

FinalDf.rename(columns = {'India/States':'States'}, inplace = True)

FinalDf.States.unique()

FinalDf.States.value_counts()

FinalDf.columns

df = pd.DataFrame(FinalDf.States.value_counts())

FinalDf.rename(columns = {'NIC Name':'NICName'}, inplace = True)

FinalDf.NICName.value_counts()

FinalDf.Division.value_counts()

FinalDf.Class.value_counts()

FinalDf.Group.value_counts()

FinalDf.rename(columns = {'Table Name':'TableName'}, inplace = True)

print(FinalDf.columns)
if 'Table Name' in FinalDf.columns:
    # Column exists, proceed with value_counts()
    FinalDf['Table Name'].value_counts()
else:
    # Column does not exist, handle the exception
    print("Column 'Table Name' not found in DataFrame.")

FinalDf["Main Workers - Total - Males"].value_counts()

FinalDf.States.str.split("-")

FinalDf.States.str.split("-")[0]

FinalDf["state_head"]=FinalDf.States.str.split("-")

FinalDf["state_head"]

def stateName(x):
  return x[0]

FinalDf["state_dump"]=FinalDf.States.str.split("-")

FinalDf.state_head=FinalDf.state_dump.apply(lambda x:x[0])

FinalDf["state_names"]=FinalDf.state_dump.apply(lambda x:x[1])

FinalDf

FinalDf=FinalDf.drop(columns=["States","state_dump"], axis=1)

FinalDf.describe()

FinalDf.rename(columns = {'Main Workers - Rural - Persons':'MainWorkersRuralPersons'}, inplace = True)

FinalDf.isnull().sum()

pd.set_option('display.max_columns', None)
FinalDf

FinalDf=FinalDf.dropna(axis=1)

FinalDf

FinalDf.isnull().sum()

#Univariant Analysis

import seaborn as sn

sn.distplot(FinalDf["Main Workers - Total -  Persons"])

sn.distplot(FinalDf["Main Workers - Total - Males"])

sn.distplot(FinalDf["Main Workers - Total - Females"])

sn.boxplot(FinalDf["Main Workers - Total -  Persons"])

FinalDf[FinalDf['Main Workers - Total -  Persons']==FinalDf['Main Workers - Total -  Persons'].max()]

FinalDf[FinalDf['Main Workers - Total -  Persons']==FinalDf['Main Workers - Total -  Persons'].min()]

FinalDf[FinalDf['Main Workers - Total -  Persons']==FinalDf['Main Workers - Total -  Persons'].mean()]

FinalDf[FinalDf['Main Workers - Total -  Persons']==FinalDf['Main Workers - Total -  Persons'].median()]

count=FinalDf.groupby(["state_names"])["state_names"].count().to_frame()

count.rename(columns={"state_names":"count"},inplace=True)

count

x=count.sort_values(by="count").reset_index()

import matplotlib.pyplot as plt

from matplotlib import rcParams

sn.set(rc={'figure.figsize':(100.7,8.27)})

rcParams['figure.figsize'] = 100,8.27

dims = (100, 8.27)

fig, ax = plt.subplots(figsize=dims)

ax=sn.barplot(data=x,x="state_names",y="count")
ax.tick_params(axis='x',rotation=90)

data_rice=FinalDf[FinalDf['NICName']=='Growing of rice']
data_rice

data_rice.head()
data_rice.columns
data_riceSC = data_rice[data_rice['State Code'] == 'B0218SC']
data_riceSC

count=data_riceSC.groupby(["state_names"])["state_names"].count().to_frame()

count.rename(columns={"state_names":"count"},inplace=True)

count



x=count.sort_values(by="count").reset_index()

import matplotlib.pyplot as plt

from matplotlib import rcParams

dims = (35, 18)

fig, ax = plt.subplots(figsize=dims)

ax=sn.barplot(data=x,x="state_names",y="count")
ax.tick_params(axis='x',rotation=90)

data_rice

data_rice.columns = data_rice.columns.str.replace(' ', '')
data_rice

data_riceState=data_rice.groupby(['state_names'])['MainWorkers-Total-Persons'].sum()
data_riceState

rice_sum=data_riceState.to_frame()
rice_sum.rename(columns={"state_names":"sum"},inplace=True)
rice_sum

sorted_rice=rice_sum.sort_values(by="MainWorkers-Total-Persons").reset_index()
sorted_rice

ax=sn.barplot(data=sorted_rice,x="state_names",y="MainWorkers-Total-Persons")
ax.tick_params(axis='x',rotation=90)

FinalDf['State Code'].unique()

data_finalrice=data_rice[(data_rice['StateCode']!="32") & (data_rice['StateCode']!="29") & (data_rice['StateCode']!="30") & (data_rice['StateCode']!="34")
& (data_rice['StateCode']!="14") & (data_rice['StateCode']!="08") & (data_rice['StateCode']!="09") & (data_rice['StateCode']!="21") & (data_rice['StateCode']!="07")
& (data_rice['StateCode']!="19") & (data_rice['StateCode']!="11") & (data_rice['StateCode']!="15") & (data_rice['StateCode']!="16") & (data_rice['StateCode']!="20")
& (data_rice['StateCode']!="12") & (data_rice['StateCode']!="24") & (data_rice['StateCode']!="13") & (data_rice['StateCode']!="18") & (data_rice['StateCode']!="02")
& (data_rice['StateCode']!="05") & (data_rice['StateCode']!="10") & (data_rice['StateCode']!="27") ]
data_finalrice

FinalDf['State Code'].unique()

data_riceDistrictCode=data_rice.groupby(['state_names'])['MainWorkers-Total-Males'].sum().sort_values(ascending=False).to_frame()
data_riceDistrictCode=data_riceDistrictCode.reset_index()
data_riceDistrictCode

data_riceDistrictCode=data_rice.groupby(['state_names'])['MainWorkers-Total-Males'].sum().sort_values(ascending=False).nlargest(10).to_frame()
data_riceDistrictCode=data_riceDistrictCode.reset_index()
data_riceDistrictCode

sn.set(rc={"figure.figsize" :(35,18)})
ax=sn.barplot(data=data_riceDistrictCode, x='state_names', y='MainWorkers-Total-Males')
ax.tick_params(axis='x', rotation=90)

print('District_Name' in data_rice.columns)

import pandas as pd

print(data_rice.columns)

data_riceTableName = data_rice.groupby(['DistrictCode'])['MainWorkers-Total-Males'].sum().sort_values(ascending=False).reset_index()

data_riceTableName = data_riceTableName.reset_index()
data_riceTableName

sn.set(rc={"figure.figsize" :(10,8)})
ax=sn.barplot(data=data_riceTableName, x='DistrictCode', y='MainWorkers-Total-Males')
ax.tick_params(axis='x', rotation=90)

FinalDf['state_head'].unique()

FinalDf['state_names'].unique()

FinalDf['State Code'].unique()

FinalDf['District Code'].unique()

FinalDf['Division'].unique()

FinalDf['Group'].unique()

FinalDf['Class'].unique()

FinalDf['NICName'].unique()

data_state=FinalDf[FinalDf['state_head']=='STATE']
data_state

FinalDf_statesDist=FinalDf.groupby(['state_head','state_names'])['Main Workers - Total - Females'].sum().sort_values(ascending=False).to_frame()
FinalDf_statesDist=FinalDf_statesDist.reset_index()
FinalDf_statesDist.columns = FinalDf_statesDist.columns.str.replace(' ', '')
FinalDf_statesDist.state_head = FinalDf_statesDist.state_head.str.replace(' ', '')
data_state=FinalDf_statesDist[FinalDf_statesDist['state_head']=='STATE']
data_state=data_state.reset_index()
data_state

FinalDf.state_head = FinalDf.state_head.str.replace(' ', '')
FinalDf_state=FinalDf[FinalDf['state_head']=='STATE']
FinalDf_state

FinalDf_sample=FinalDf_state.sample(n=200)
FinalDf_sample

FinalDf_statesFWorkers=FinalDf_sample.groupby(['state_head','state_names'])['Main Workers - Total - Females'].sum().sort_values(ascending=False).to_frame()
FinalDf_statesFWorkers=FinalDf_statesFWorkers.reset_index()
FinalDf_statesFWorkers.columns = FinalDf_statesFWorkers.columns.str.replace(' ', '')
FinalDf_statesFWorkers

FinalDf_statesFWorkers=FinalDf_sample.groupby(['state_names'])['Main Workers - Total - Females'].sum().sort_values(ascending=False).nsmallest(10).to_frame()
FinalDf_statesFWorkers=FinalDf_statesFWorkers.reset_index()
FinalDf_statesFWorkers.columns = FinalDf_statesFWorkers.columns.str.replace(' ', '')
FinalDf_statesFWorkers

sn.set(rc={"figure.figsize" :(15,8)})
ax=sn.barplot(data=FinalDf_statesFWorkers, x='state_names', y='MainWorkers-Total-Females')
ax.tick_params(axis='x', rotation=90)

FinalDf_statesFWorkers=FinalDf_sample.groupby(['state_names'])['Main Workers - Total - Females'].sum().sort_values(ascending=False).nlargest(10).to_frame()
FinalDf_statesFWorkers=FinalDf_statesFWorkers.reset_index()
FinalDf_statesFWorkers.columns = FinalDf_statesFWorkers.columns.str.replace(' ', '')
FinalDf_statesFWorkers

sn.set(rc={"figure.figsize" :(15,8)})
ax=sn.barplot(data=FinalDf_statesFWorkers, x='state_names', y='MainWorkers-Total-Females')
ax.tick_params(axis='x', rotation=90)

FinalDf_statesFWorkers

FinalDf_sample.columns = FinalDf_sample.columns.str.replace(' ', '')
#FinalDf_sample.state_head = FinalDf_sample.state_head.str.replace(' ', '')
KA = FinalDf_sample[(FinalDf_sample['state_names'] == ' TAMIL NADU')]

KA

KA['NICName'].unique()

ss = KA[KA['NICName'] == 'Growing of oleaginous fruits']

NC = KA.groupby(['NICName'])['MainWorkers-Rural-Females'].sum().sort_values(ascending=False).to_frame().reset_index()
NC

sn.set(rc={"figure.figsize" :(15,8)})
ax=sn.barplot(data=NC, x='NICName', y='MainWorkers-Rural-Females')
ax.tick_params(axis='x', rotation=90)

FinalDf

FinalDf['state_head'] = FinalDf['state_head'].astype(str)

FinalDf['state_head'].dtypes

FinalDf['NICName'].unique()

food = FinalDf[FinalDf['NICName'] == 'Manufacture of food products']

food

sc = food.groupby(['State Code'])['Main Workers - Urban - Females'].sum().sort_values(ascending=True).to_frame().reset_index()

sn.set(rc={"figure.figsize" :(15,8)})
ax=sn.lineplot(data=sc, x='State Code', y='Main Workers - Urban - Females')
ax.tick_params(axis='x', rotation=90)

def NICName(x):
  food = FinalDf[FinalDf['NICName'] == 'Manufacture of food products']
  sc = food.groupby(['State Code'])['Main Workers - Urban - Females'].sum().sort_values(ascending=True).to_frame().reset_index()
  sn.set(rc={"figure.figsize" :(15,8)})
  ax=sn.lineplot(data=sc, x='State Code', y='Main Workers - Urban - Females')
  ax.tick_params(axis='x', rotation=90)

NICName('Manufacture of other textiles')

NICName('Manufacture of rubber products')

NICName('Construction roads and railways')

NICName('Accommodation')

NICName('Funeral and related activities')

#TOP 3 Total No. of Main Workers for NIC name for each state

FinalDf_sample=FinalDf.sample(n=10000)
FinalDf_sample

list(FinalDf_sample.columns.values)

FinalDf_sample.groupby(['state_names','NICName'])['Main Workers - Total -  Persons'].apply(lambda x:x.nlargest(3).sum())

